/**
 * Name:			Angelo Dikon Wong
 * Student ID:			148021199
 * Seneca email:		adikon-wong@myseneca.ca
 * Section: OOP244 - NGG
 **/

In this workshop, I have put into practice what I have learned about delivered classes, pure virtual, abstract. We can define a pure virtual function by adding "virtual" in the beginning and "=0" in the end, another thing that is important to have in mind, is that if the whole header file is pure virtual, it becomes an interface. A class that contents a pure virtual becomes an abstract class. We usually use these functions because it allows you reusability, in some situations, you can override it, and instead of writing a longer code, you can simply call the one from your base class and implement it, in other words, each class can implement your own, they have the same signature, but different meaning. An abstract class is the one that defines the interface, now the concrete class is the delivered one, and it implements the interface.

The most recent project part that I have been working is milestone 2. It was not much different from the workshop, it also uses virtual functions, we can see that in the IOAble module, it is basically an interface module, in other words, full of pure virtual functions.

Recently I have been finishing the codes before the due date, I really hope I keep this rhythm, so I can work on my other classes stuff.