/**
 * Name:			Angelo Dikon Wong
 * Student ID:			148021199
 * Seneca email:		adikon-wong@myseneca.ca
 * Section: OOP244 - NGG
 **/

In this workshop, I have learned about function template, in the beginning, I was thinking that it was irrelevant, it is the same thing as a simple function, but after practicing in this workshop how to create a template, now I understand the meaning of it and how useful it is, it works like on function that works as other functions, instead of writing several functions for each occasion, just simply write a template. To write a template we usually type "template" followed by the symbols "<>", and within these symbols, we write the specification of your template. Calling the template function is not a mystery, is pretty much the same thing as calling a function, you type it and pass the parameters required.

For search template function work, we have to create two typename, one is used to the array that we are reading the values, the other one is the key, the value that we are using to compare. We use different typename, because it may vary. On the first parameter, we add the Collection template because it will be responsible for storing the data.

For listArrayElements template function, the inclusion of only one typename is enough, this typename is used as the array that we are going to print. Comparing to the past template that we created, this does not require another template as a parameter, the reason is that this function will only print.

Speaking of milestone, the last one that I have worked on before this workshop is milestone 3. In milestone 3 we were responsible to create modules that inherit some pure virtual function from IOAble, and each module we write its own version of the function. Ticket have its own version of write, and Patient has its own version of write as well, but it also calls the write function from the ticket module.